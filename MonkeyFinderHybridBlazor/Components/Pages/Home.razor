@page "/"


@inject MonkeyService monkeyService
@inject IDialogService dialogService

<div>
    <button type="button" class="btn btn-primary" @onclick="AddMonkey">Add new monkey</button>
    
    @if (monkeys is null)
    {
        <p><em>Loading monkeys...</em></p>
    }
    else
    {
        <ul class="card-list">
            @foreach (var monkey in monkeys)
            {
                <li class="card-item">
                    <img class="card-image" src="@monkey.Image">
                    <div class="card-content">
                        <h2>@monkey.Name</h2>
                        <p>@monkey.Location</p>
                    </div>
                </li>
            }
        </ul>
    }
</div>

@code {
    private List<Monkey>? monkeys;
    private Monkey DialogData { get; set; } = new();

    // OnInitializedAsync is a built-in lifecycle event that is called when this page is initialized
    protected override async Task OnInitializedAsync()
    {
        // This was added
        // Simulate asynchronous loading to demonstrate a loading indicator
        await Task.Delay(500);

        // Load monkeys from MonkeyService
        monkeys = await monkeyService.GetMonkeys();
    }

    private async Task AddMonkey()
    {
        // MAUI Debug console
        Debug.WriteLine("Add Monkey");


        // Create a new instance of DialogData to allow the user to cancel the update
        var data = new Monkey();
        var dialog = await dialogService.ShowDialogAsync<MonkeyDialog>(data, new DialogParameters()
            {
                Title = $"Add a New Monkey",
                PreventDismissOnOverlayClick = true,
                PreventScroll = true,
            });

        var result = await dialog.Result;
        if (!result.Cancelled && result.Data is not null)
        {
            DialogData = (Monkey)result.Data;
            monkeyService.AddMonkey(DialogData);
            monkeys = await monkeyService.GetMonkeys();
        }
        
    }
}